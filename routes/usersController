const express = require('express');
const router = express.Router();
const ObjectID = require('mongoose').Types.ObjectId;

const { UsersModel } = require('../models/usersModel');

router.get('/', (req, res) => {
    UsersModel.find((err, docs) => {
        if (!err) {
            res.send(docs);
        } else {
            console.log("Error to get data : " + err);
        }
    })
});

router.post('/', (req, res) => {
    const newRecord = new UsersModel({
        address: req.body.address,
        age: req.body.age,
        city: req.body.city,
        firstName: body.firstName,
        hobbie: req.body.hobbie,
        lastName: req.body.lastName,
        sex: req.body.sex,
    });
    newRecord.save((err, docs) => {
        if (!err) {
            res.send(docs);
        } else {
            console.log("Error on user creation : " + err);
        }
    })
});

router.put("/:id", (req, res) => {
    if (!ObjectID.isValid(req.params.id))
        return res.status(400).send("ID unknow : " + req.params.id)
    
    const updateRecord = {
        address: req.body.address,
        age: req.body.age,
        city: req.body.city,
        firstName: req.body.firstName,
        hobbie: req.body.hobbie,
        lastName: req.body.lastName,
        sex: req.body.sex,
    };
    UsersModel.findByIdAndUpdate(
        req.params.id,
        { $set: updateRecord },
        { new: true },
        (err, docs) => {
            if (!err) {
                res.send(docs);
            } else {
                console.log("Error on user update : " + err);
            }
        }) 
});

router.delete("/:id", (req, res) => {
    if (!ObjectID.isValid(req.params.id))
        return res.status(400).send("ID unknow : " + req.params.id)
    
    UsersModel.findByIdAndRemove(
        req.params.id,
        (err, docs) => {
            if (!err) {
                res.send(docs);
            } else {
                console.log("Error on user creation : " + err);
            }
        })
});

module.exports = router;

